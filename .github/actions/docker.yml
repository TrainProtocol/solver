name: 'Docker build and push'
description: 'Build and push Docker image with versioning'
inputs:
  context:
    description: 'Docker build context path'
    required: true
  file:
    description: 'Dockerfile path'
    required: true
  build-args:
    description: 'Docker build arguments'
    required: false
  docker-image:
    description: 'Docker image name'
    required: true
  dockerhub-username:
    description: 'Docker Hub username'
    required: true
  dockerhub-token:
    description: 'Docker Hub token'
    required: true
    
runs:
  using: "composite"
  steps:
    - name: Format version
      id: format_version
      shell: bash
      run: |
        commitHash=${GITHUB_SHA:0:7}
        ts=$(date +%s)
        version=$commitHash-$ts
        echo "VERSION=$version" >> $GITHUB_ENV

    - name: Sanitize branch name
      id: sanitize_branch_name
      shell: bash
      run: |
        sanitized_ref_name=$(echo "${GITHUB_REF_NAME}" | sed 's/[\/.]/-/g')
        echo "SANITIZED_REF_NAME=$sanitized_ref_name" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-token }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        push: ${{github.ref_name == 'main' || github.ref_name == 'dev'}}
        build-args: ${{ inputs.build-args }}
        tags: |
          ${{ inputs.docker-image }}:${{ env.SANITIZED_REF_NAME }}-${{ env.VERSION }}
          ${{ inputs.docker-image }}:${{ env.SANITIZED_REF_NAME }}
        cache-from: type=gha
        cache-to: type=gha,mode=max